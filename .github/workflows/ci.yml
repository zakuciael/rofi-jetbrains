name: Continuous Integration
on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Run rustfmt
        uses: actions-rust-lang/rustfmt@v1
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - name: Install required system dependencies
        run: sudo apt-get install -y libpango1.0-dev
      - name: Run clippy
        uses: clechasseur/rs-clippy-check@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -W warnings
  flake:
    name: Flake check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Check flake.lock
        uses: DeterminateSystems/flake-checker-action@v9
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check repository
        run: nix flake check
  populate-cache:
    name: Populate cache (${{ matrix.system }}.${{ matrix.package }})
    strategy:
      matrix:
        system:
          - x86_64-linux
          - aarch64-linux
          - i686-linux
        package:
          - rofi-jetbrains.cargoArtifacts
          - rofi-jetbrains
          - rofi-jetbrains-next
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - if: matrix.system == 'aarch64-linux'
        name: Set up QEMU for aarch64 support
        uses: docker/setup-qemu-action@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: "${{ secrets.GITHUB_TOKEN }}"
          extra_nix_config: |
            ${{ matrix.system == 'aarch64-linux' && 'extra-platforms = aarch64-linux' || '' }}
      - name: Install Attic and nix-fast-build
        shell: bash
        run: |
          nix profile install nixpkgs#attic-client nixpkgs#nix-fast-build
      - name: Configure Attic
        shell: bash
        run: |
          attic login --set-default central "${{ vars.ATTIC_CACHE_URL }}" "${{ secrets.ATTIC_CACHE_TOKEN }}"
          attic use "${{ vars.ATTIC_CACHE_NAME }}"
      - name: Build package .#packages.${{ matrix.system }}.${{ matrix.package }}
        continue-on-error: false
        run: |
          nix-fast-build --eval-workers 1 --skip-cached --no-nom --attic-cache="${{ vars.ATTIC_CACHE_NAME }}" --option build-fallback true \
            -f .#packages.${{ matrix.system }}.${{ matrix.package }}
