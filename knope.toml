[package]
versioned_files = [
    "Cargo.toml",
    "Cargo.lock"
]
changelog = "CHANGELOG.md"
extra_changelog_sections = [
    { types = ["major"], name = "Major Changes" },
    { types = ["minor"], name = "Minor Changes" },
    { types = ["patch"], name = "Patch Changes" },
]

[[package.assets]]
path = "artifacts/rofi_jetbrains.so"
name = "jetbrains.so"

[github]
owner = "zakuciael"
repo = "rofi-jetbrains"

[[workflows]]
name = "prepare-release"
help_text = "Generates a release PR for the new version of the project"

[[workflows.steps]]
type = "Command"
command = "git switch -c release"

[[workflows.steps]]
type = "PrepareRelease"
ignore_conventional_commits = true

[[workflows.steps]]
type = "Command"
command = "git commit -m \"chore(release): $version\""
variables = { "$version" = "Version" }

[[workflows.steps]]
type = "Command"
command = "git push --force --set-upstream origin release"

[[workflows.steps]]
type = "CreatePullRequest"
base = "main"

[workflows.steps.title]
template = "chore(release): $version"
variables = { "$version" = "Version" }

[workflows.steps.body]
template = "This PR was created by Knope. Merging it will create a new release\n\n$changelog"
variables = { "$changelog" = "ChangelogEntry" }

[[workflows]]
name = "release"
help_text = "Generate a GitHub release of the project"

[[workflows.steps]]
type = "Release"

[[workflows]]
name = "change"
help_text = "Generate a new changeset file"

[[workflows.steps]]
type = "CreateChangeFile"

[[workflows]]
name = "version"
help_text = "Get the current version of the project"

[[workflows.steps]]
type = "Command"
command = "echo $version"
variables = { "$version" = "Version" }
